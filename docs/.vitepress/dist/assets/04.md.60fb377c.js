import{_ as e,o as a,c as t,O as c}from"./chunks/framework.4afe7240.js";const C=JSON.parse('{"title":"VUE-CLI","description":"","frontmatter":{},"headers":[],"relativePath":"04.md","filePath":"04.md"}'),o={name:"04.md"},s=c('<h1 id="vue-cli" tabindex="-1">VUE-CLI <a class="header-anchor" href="#vue-cli" aria-label="Permalink to &quot;VUE-CLI&quot;">​</a></h1><p>Vue CLI 是一个官方提供的基于 Vue.js 的脚手架工具，可以帮助开发者快速搭建 Vue.js 项目的开发环境和基础架构。</p><p>Vue CLI 提供了一个命令行界面，可以通过命令行来创建、配置和管理 Vue.js 项目，同时还集成了 Webpack、Babel、ESLint 等常用的构建工具和插件，使得开发者可以快速搭建、开发和调试 Vue.js 项目。</p><p>使用 Vue CLI 创建一个新的 Vue.js 项目非常简单，只需要在命令行中执行以下命令即可：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">vue create my-project</span></span></code></pre></div><p>其中，<code>my-project</code> 是项目的名称，执行完该命令后，Vue CLI 会在当前目录下创建一个名为 <code>my-project</code> 的新项目，并自动安装所需的依赖包和插件。</p><p>除了创建新项目，Vue CLI 还提供了许多其他的命令和功能，如：</p><ul><li><code>vue serve</code>：启动一个本地开发服务器，用于开发和调试应用程序；</li><li><code>vue build</code>：构建应用程序的生产版本；</li><li><code>vue add</code>：添加插件或功能到已有的项目中；</li><li><code>vue inspect</code>：查看应用程序的 Webpack 配置信息等。</li></ul><p>在使用 Vue CLI 进行开发时，可以通过配置文件来定制化应用程序的构建和开发环境，Vue CLI 默认使用了一套通用的配置，但也可以根据实际需求进行修改和优化。</p>',9),l=[s];function p(i,d,n,r,u,_){return a(),t("div",null,l)}const m=e(o,[["render",p]]);export{C as __pageData,m as default};
